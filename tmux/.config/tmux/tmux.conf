# prefix key
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# general
set -g mouse on
set -g focus-events on
bind S source-file ~/.config/tmux/tmux.conf
set -s escape-time 50
set -g history-limit 20000
# check true colors inside tmux with: curl -s https://raw.githubusercontent.com/JohnMorales/dotfiles/master/colors/24-bit-color.sh | bash
# it should be continuous
set -g default-terminal "alacritty"
set-option -sa terminal-overrides ",alacritty*:Tc"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# copy-mode
set -g mode-keys vi
bind -n 'C-M-c' copy-mode
bind -T copy-mode-vi L send -X end-of-line
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi / command-prompt -p "(search up)" "send -X search-backward \"%%%\""
bind -T copy-mode-vi ? command-prompt -p "(search down)" "send -X search-forward \"%%%\""
bind / copy-mode \; send /
# tmux >= 2.4
bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel "xclip -selection c"
bind -T copy-mode-vi y send -X copy-pipe "xclip -selection c"

# Windows, panes, sessions
unbind '"'
unbind %
bind v split-window -v -c "#{pane_current_path}"
bind b split-window -h -c "#{pane_current_path}"
bind W list-sessions
# hjkl pane traversal
bind h select-pane -L
bind k select-pane -U
bind j select-pane -D
bind l select-pane -R
bind c new-window -c '$HOME'
bind C command-prompt -p "new session name:"  "new-session -A -s '%%'"
bind , command-prompt -p "current session name:"  "rename-session '%%'"
bind . command-prompt -p "current window name:"  "rename-window '%%'"
bind X confirm-before -p "kill-window #I? (y/n)" kill-window
bind x confirm-before -p "kill-pane #I? (y/n)" kill-pane
bind o break-pane
bind O join-pane
bind g last-window
bind 'L' swap-pane -D
bind 'H' swap-pane -U
bind -n S-left prev
bind -n S-right next
bind -n C-S-Left swap-window -t -1\; select-window -t -1
bind -n C-S-Right swap-window -t +1\; select-window -t +1
bind Down resize-pane -D 5
bind Up resize-pane -U 5
bind Left resize-pane -L 10
bind Right resize-pane -R 10
# remap window selection starting with 10th window in <c-a>w mode
bind -T root a if -F "#{==:#{pane_mode},tree-mode}" "send M-a" "send a"
bind -T root b if -F "#{==:#{pane_mode},tree-mode}" "send M-b" "send b"
bind -T root C-c if -F "#{==:#{pane_mode},tree-mode}" "send q" "send C-c"
bind -T root c if -F "#{==:#{pane_mode},tree-mode}" "send M-c" "send c"
bind -T root d if -F "#{==:#{pane_mode},tree-mode}" "send M-d" "send d"
bind -T root e if -F "#{==:#{pane_mode},tree-mode}" "send M-e" "send e"
bind -T root f if -F "#{==:#{pane_mode},tree-mode}" "send M-f" "send f"
bind -T root g if -F "#{==:#{pane_mode},tree-mode}" "send M-g" "send g"
bind -T root h if -F "#{==:#{pane_mode},tree-mode}" "send M-h" "send h"
bind -T root i if -F "#{==:#{pane_mode},tree-mode}" "send M-i" "send i"
bind -T root C-j if -F "#{==:#{pane_mode},tree-mode}" "send j" "send C-j"
bind -T root j if -F "#{==:#{pane_mode},tree-mode}" "send M-j" "send j"
bind -T root C-k if -F "#{==:#{pane_mode},tree-mode}" "send k" "send C-k"
bind -T root k if -F "#{==:#{pane_mode},tree-mode}" "send M-k" "send k"
bind -T root l if -F "#{==:#{pane_mode},tree-mode}" "send M-l" "send l"
bind -T root m if -F "#{==:#{pane_mode},tree-mode}" "send M-m" "send m"
bind -T root n if -F "#{==:#{pane_mode},tree-mode}" "send M-n" "send n"
bind -T root o if -F "#{==:#{pane_mode},tree-mode}" "send M-o" "send o"
bind -T root p if -F "#{==:#{pane_mode},tree-mode}" "send M-p" "send p"
bind -T root C-q if -F "#{==:#{pane_mode},tree-mode}" "send q" "send C-q"
bind -T root q if -F "#{==:#{pane_mode},tree-mode}" "send M-q" "send q"
bind -T root r if -F "#{==:#{pane_mode},tree-mode}" "send M-r" "send r"
bind -T root s if -F "#{==:#{pane_mode},tree-mode}" "send M-s" "send s"
bind -T root t if -F "#{==:#{pane_mode},tree-mode}" "send M-t" "send t"
bind -T root u if -F "#{==:#{pane_mode},tree-mode}" "send M-u" "send u"
bind -T root v if -F "#{==:#{pane_mode},tree-mode}" "send M-v" "send v"
bind -T root w if -F "#{==:#{pane_mode},tree-mode}" "send M-w" "send w"
bind -T root x if -F "#{==:#{pane_mode},tree-mode}" "send M-x" "send x"
bind -T root y if -F "#{==:#{pane_mode},tree-mode}" "send M-y" "send y"
bind -T root z if -F "#{==:#{pane_mode},tree-mode}" "send M-z" "send z"
set -g pane-active-border-style 'fg=#ff0000,bg=#ffffff'
setw -g aggressive-resize on
setw -g window-status-current-style fg=black,bg=red

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'roosta/tmux-fuzzback'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'schasse/tmux-jump'
set -g @plugin 'laktak/extrakto'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'MunifTanjim/tmux-suspend'

# nhdaly/tmux-better-mouse-mode
set -g @emulate-scroll-for-no-mouse-alternate-buffer "on"
set -g @scroll-speed-num-lines-per-scroll 5

# tmux-plugins/tmux-logging
set -g @screen-capture-key 'y'
set -g @save-complete-history-key 'Y'

# tmux-plugins/tmux-open
set -g @open-editor 'o'

# roosta/tmux-fuzzback
set -g @fuzzback-bind f
set -g @fuzzback-popup 1
set -g @fuzzback-popup-size '99%'

# sainnhe/tmux-fzf
TMUX_FZF_ORDER="pane|window|session|command|keybinding|clipboard|process"
TMUX_FZF_LAUNCH_KEY="F"
TMUX_FZF_OPTIONS="-p -w 70% -h 70% -m"

# schasse/tmux-jump
set -g @jump-key 's'

# laktak/extrakto
# history content tab completion
set -g @extrakto_copy_key "ctrl-y"
set -g @extrakto_insert_key "enter"

# tmux-plugins/tmux-prefix-highlight
set -g @prefix_highlight_fg "#000000"
set -g @prefix_highlight_bg '#ff0000'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=black,bg=yellow,bold'
set -g @prefix_highlight_show_sync_mode 'on'
set -g @prefix_highlight_sync_mode_attr 'fg=white,bg=blue'

# tmux-plugins/tmux-resurrect
# sessions saved inside ~/.tmux/resurrect/
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-processes 'ssh "~nvim" zsh nnn'

# tmux-plugins/tmux-continuum
set -g @continuum-restore 'on'
set -g @continuum-save-interval '30'
continuum_auto_save='#(~/.config/tmux/plugins/tmux-continuum/scripts/continuum_save.sh)'

# MunifTanjim/tmux-suspend
set -g @suspend_on_resume_command "tmux set -g status on"
set -g @suspend_on_suspend_command "tmux set -g status off"

# construct status line
set -g status-bg '#ffffff'
set -g status-keys vi
set -g status-justify centre
set -g base-index 1
set -g status-interval 2
set -g status-left-length 60
set -g status-left '#{cpu_fg_color} CPU: #{cpu_percentage} #{ram_fg_color} RAM: #{ram_percentage} #{cpu_temp_fg_color} TEMP: #{cpu_temp} #{cpu_temp_percentage} #[fg=default,dim,bg=#ff0000]#(if [ -n "${SSH_TTY}" ]; then echo SSH; fi)'
set -g status-right '#{$continuum_auto_save} #{prefix_highlight} %H:%M'

# plugin manager
run '~/.config/tmux/plugins/tpm/tpm'
